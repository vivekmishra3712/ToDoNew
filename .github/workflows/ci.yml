name: Continuous Integration

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

jobs:
  checkout:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

  cache:
    runs-on: self-hosted
    needs: checkout
    steps:
      - name: Cache SonarQube packages
        uses: actions/cache@v4.0.2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

  jacoco:
    runs-on: ubuntu-latest  # Change to Linux-based runner
    needs: cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2
        
      - name: Build with Maven
        run: mvn -B package -Pcoverage

      - name: Generate JaCoCo badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          generate-summary: true

      - name: Log coverage percentages to workflow output
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branches = ${{ steps.jacoco.outputs.branches }}"

      - name: Upload JaCoCo coverage report as a workflow artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: jacoco-report
          path: target/site/jacoco/

  sonarqube:
    runs-on: self-hosted
    needs: jacoco
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2

      - name: Check SonarQube accessibility
        shell: powershell
        run: |
          $Response = Invoke-WebRequest -Uri http://localhost:9000 -Method Head -ErrorAction Stop
          if ($Response.StatusCode -eq 200) {
              Write-Output "SonarQube is accessible."
          } else {
            Write-Output "SonarQube is not accessible."
            exit 1
          }

      - name: Download JaCoCo coverage report
        uses: actions/download-artifact@v4.1.8
        with:
          name: jacoco-report
          path: target/site/jacoco/  # Ensure this matches the upload path

      - name: Build and analyze
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  artifacts:
    runs-on: self-hosted
    needs: sonarqube
    steps:
      - name: Copy JAR file to staging
        run: |
          mkdir staging
          Copy-Item target\*.jar staging
        shell: powershell
        
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging

  release:
    runs-on: ubuntu-latest
    needs: artifacts
    steps:
      - name: Download web-app content
        uses: actions/download-artifact@v4.1.8
        with:
          name: Package
          
      - name: View content
        run: ls -R

      - name: Archive site content
        uses: thedoctor0/zip-release@master
        with:
          filename: app.zip

      - name: Create GitHub release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_type }}
          release_name: Release ${{ github.ref_type }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./app.zip
          asset_name: app-v${{ github.ref_type }}.zip
          asset_content_type: application/zip
          
  docker:
    runs-on: ubuntu-latest  # Changed to ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2
        
      - name: Build with Maven
        run: mvn -B package
        
      - name: Build Docker image
        run: docker build -t vijaynvb/todoapp .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image to Docker Hub
        run: docker push vijaynvb/todoapp
